% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn.R
\name{fn}
\alias{fn}
\alias{fn_type}
\alias{fn_is_closure}
\alias{fn_is_special}
\alias{fn_is_builtin_as_closure}
\alias{fn_is_builtin}
\alias{fn_revert_builtin}
\alias{fn_reenv}
\alias{fn_name}
\alias{fn_name_no_ns}
\alias{fn_name_with_ns}
\alias{fn_sym}
\alias{fn_sym_no_ns}
\alias{fn_sym_with_ns}
\alias{fn_names}
\alias{fn_set_name}
\alias{fn_ns}
\alias{fn_set_ns}
\alias{fn_in_ns}
\alias{fn_is_private}
\alias{fn_is_export}
\alias{fn_fmls_syms0}
\title{Extend rlang's fn functions}
\usage{
fn_type(fn)

fn_is_closure(fn)

fn_is_special(fn)

fn_is_builtin_as_closure(fn)

fn_is_builtin(fn)

fn_revert_builtin(fn)

fn_reenv(fn, env = globalenv())

fn_name(x, fns = NULL, ..., with_ns = TRUE, env = globalenv())

fn_name_no_ns(fn)

fn_name_with_ns(fn)

fn_sym(fn, with_ns = TRUE)

fn_sym_no_ns(fn)

fn_sym_with_ns(fn)

fn_names(..., with_ns = TRUE)

fn_set_name(fn)

fn_ns(fn)

fn_set_ns(fn, ns)

fn_in_ns(fn, ns)

fn_is_private(fn, ns = NULL)

fn_is_export(fn, ns = NULL)

fn_fmls_syms0(fn, no_dots = TRUE)
}
\arguments{
\item{fn}{a function.}

\item{with_ns}{a logical. If \code{TRUE}, \verb{fn_name(s)(*)} return  the name(s) of the functions as input including their namespace.}

\item{ns}{a string. The name of a namespace.}
}
\description{
Extend rlang's fn functions
}
